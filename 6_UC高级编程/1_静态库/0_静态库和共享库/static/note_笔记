静态库的创建步骤：
    1-编写源文件xxx.c
    2-编译源程序，生成目标文件（xxx.o）
        gcc -c xxx.c
    3-生成静态库文件（xx.a）
        ar -r 库文件名 xxx.o
    注意：库文件名命名规范：
       lib开头， .a结束， 中间放库名
       ar -r libxxx.a xxx.o

静态库的使用步骤：
    1-编写测试程序test.c
    2-编译不链接test.c，生成目标文件(test.o)
        gcc -c test.c 
    3-链接静态库（三种方法）
        3.1-直接链接
            gcc test.o libxxx.a
        3.2-双L链接法(注意，第一个是小写的L，库名：去掉lib开头和.a,剩下的名字)
           gcc test.o -l 库名 -L 库路径
        3.3-单L链接法（需要配置环境变量LIBRARY_PATH）
            gcc test.o -l 库名
    注意：编写商业代码，需要提供一个库文件和一个头文件

共享库的创建步骤：
    1-编写源文件xxx.c
    2-编译生成xxx.o(注意后面要加 -fpic)
        gcc -c -fpic xxx.c (-fpic不写也可以)
    3-生成共享库文件.so
        gcc -shared xxx.o -o libxxx.so
        共享库的后缀是.so
        注：有些系统的共享库后缀是.so.整数
共享库的使用步骤：
    1-和静态库一模一样(必须配置环境变量 export LD_LIBRARY_PATH = .)

